!function(e){function t(s){if(i[s])return i[s].exports;var n=i[s]={exports:{},id:s,loaded:!1};return e[s].call(n.exports,n,n.exports,t),n.loaded=!0,n.exports}var i={};return t.m=e,t.c=i,t.p="javascripts/",t(0)}([function(e,t,i){e.exports=i(3)},,function(e,t){"use strict";var i=t;window.$&&$(function(){i.data=window._ReasonsData||!1}),i.getToggleFields=function(){return i.data.toggleFields||[]},i.getToggleFieldById=function(e){e=parseInt(e);for(var t=i.getToggleFields(),s=t.length,n=0;s>n;++n)if(parseInt(t[n].id)===e)return t[n];return!1},i.getConditionalsDataByEntryTypeId=function(e){for(var t,s=0;s<i.data.conditionals.length;++s)if(t=i.data.conditionals[s],t.typeId==e)return t;return!1},i.getEntryTypeIdsBySectionId=function(e){return i.data.entryTypeIds&&i.data.entryTypeIds.hasOwnProperty(e)?i.data.entryTypeIds[e]:!1},i.getFieldIdByHandle=function(e){return i.data.fieldIds&&i.data.fieldIds.hasOwnProperty(e)?i.data.fieldIds[e]:!1}},function(e,t,i){"use strict";var s=i(2);s.Builder=i(4),s.FLD={settings:{fieldLayoutFormSelector:"#fieldlayoutform",formSelector:"form:first",fieldSettingsSelector:"a.settings",fieldSelector:".fld-field",tabSelector:".fld-tabs .fld-tab"},init:function(){if(this.$container=$(this.settings.fieldLayoutFormSelector),!this.$container||0===this.$container.length)return!1;if(this.$form=this.$container.closest(this.settings.formSelector),!this.$form||0===this.$form.length)return!1;var e=parseInt(Craft.path.substring(Craft.path.indexOf("entrytypes/")).split("/")[1])||"new",t=s.getConditionalsDataByEntryTypeId(e);t&&(this.id=t.id,this.conditionals=t.conditionals);var i=this;this.toggleFieldIds=[],$.map(s.getToggleFields(),function(e){i.toggleFieldIds.push(parseInt(e.id))}),this.$conditionalsInput=$(this.templates.input({name:"_reasons",type:"hidden"})),this.$conditionalsIdInput=$(this.templates.input({name:"_reasonsId",value:this.id||"",type:"hidden"})),this.$form.append(this.$conditionalsInput).append(this.$conditionalsIdInput).on("submit",$.proxy(this.onFormSubmit,this)),setTimeout($.proxy(this.refresh,this),0),this.$container.on("mousedown",this.settings.fieldSelector,$.proxy(this.onFieldMouseDown,this)),$("body").on("click",".menu a",$.proxy(this.onFieldSettingsMenuItemClick,this))},refresh:function(){var e,t,i,n,a=this,o={};this.$container.find(this.settings.tabSelector).each(function(){e=$(this).find(a.settings.fieldSelector),n=[],e.each(function(){if(t=$(this),i=parseInt(t.data("id")),a.toggleFieldIds.indexOf(i)>-1){var e=s.getToggleFieldById(i);e&&n.push(e)}}),e.each(function(){t=$(this),i=parseInt(t.data("id")),t.data("_reasonsBuilder")?t.data("_reasonsBuilder").update({toggleFields:n}):t.data("_reasonsBuilder",new s.Builder({fieldId:i,toggleFields:n,rules:a.conditionals&&a.conditionals.hasOwnProperty(i)?a.conditionals[i]:null}));var e=t.data("_reasonsBuilder").getConditionals();if(e?(o[i]=e,t.addClass("reasonsHasConditionals")):t.removeClass("reasonsHasConditionals"),!t.data("_reasonsSettingsMenuItemInitialized")){var r=t.find(a.settings.fieldSettingsSelector),l=r.data("menubtn")||!1;if(!l)return;var d=l.menu.$container;d.find("ul").children(":first").clone(!0).prependTo(d.find("ul:first")).find("a:first").data("_reasonsField",t).attr("data-action","toggle-conditionals").text(Craft.t("Manage conditionals")),t.data("_reasonsSettingsMenuItemInitialized",!0)}})}),0===Object.keys(o).length?this.$conditionalsInput.attr("value",""):this.$conditionalsInput.attr("value",JSON.stringify(o))},onFieldMouseDown:function(e){var t=this,i=function s(e){$("body").off("mouseup",s),requestAnimationFrame(function(){t.refresh()})};$("body").on("mouseup",i)},onFieldSettingsMenuItemClick:function(e){var t=$(e.target),i=t.data("_reasonsField");if("toggle-conditionals"===t.data("action")){if(e.preventDefault(),e.stopPropagation(),!t.data("_reasonsModal")){var s=this,n=i.data("_reasonsBuilder"),a=$(this.templates.modal()),o=new Garnish.Modal(a,{resizable:!0,autoShow:!1,onShow:function(){requestAnimationFrame(function(){s.refresh()})},onHide:function(){requestAnimationFrame(function(){s.refresh()})}});n.get().appendTo(a.find(".body")),a.on("click",".close",function(e){o.hide()}),t.data("_reasonsModal",o)}t.data("_reasonsModal").show()}var s=this;requestAnimationFrame(function(){s.refresh()})},onFormSubmit:function(){this.refresh()},templates:{input:function(e){return'<input type="'+e.type+'" name="'+(e.name||"")+'" value="'+(e.value||"")+'" />'},modal:function(){return'<div class="modal elementselectormodal reasonsModal"><div class="body" /><div class="footer"><div class="buttons rightalign first"><div class="btn close submit">Done</div></div></div></div>'}}},window.$&&$(function(){s.FLD.init()})},function(e,t,i){"use strict";var s=i(2);e.exports=Garnish.Base.extend({$container:null,init:function(e){if(this.setSettings(e,s.Builder.defaults),this.templates=this.settings.templates,this.fieldId=this.settings.fieldId,this.$container=$(this.templates.builderUi()),this.$builder=this.$container.find(".reasonsBuilder:first"),this.$rule=this.$container.find(".reasonsRule:first").clone(!0),this.$statement=this.$container.find(".reasonsStatement:first").clone(!0),this.$statement.find(".reasonsRule").remove(),this.$message=this.$container.find(".reasonsMessage:first"),this.$container.on("click",".reasonsAddRule",$.proxy(this.onReasonsAddRuleClick,this)).on("click",".reasonsRemoveRule",$.proxy(this.onReasonsRemoveRuleClick,this)).on("click",".reasonsAddStatement",$.proxy(this.onReasonsAddStatementClick,this)).on("change",".reasonsRuleToggleField select",$.proxy(this.onReasonsRuleToggleFieldChange,this)).on("change",".reasonsRuleCompare select",$.proxy(this.onReasonsRuleCompareChange,this)).on("change",".reasonsRuleValue *:input",$.proxy(this.onReasonsRuleValueChange,this)),this.$builder.html(""),this.setToggleFields(this.settings.toggleFields),this.settings.rules&&this.settings.rules.length>0)for(var t=0;t<this.settings.rules.length;++t)this.addStatement({rules:this.settings.rules[t]});this.refresh(),s.Builder.instances.push(this)},get:function(){return this.$container},disable:function(){this.$container.addClass("disabled")},enable:function(){this.$container.removeClass("disabled")},update:function(e){this.setSettings(e,this.settings),this.setToggleFields(this.settings.toggleFields),this.refresh()},setToggleFields:function(e){this.settings.toggleFields=[],this.settings.toggleFieldIds=[];for(var t=0;t<e.length;++t)parseInt(e[t].id)!==this.fieldId&&(this.settings.toggleFields.push(e[t]),this.settings.toggleFieldIds.push(parseInt(e[t].id)));for(var i="",t=0;t<this.settings.toggleFields.length;++t)i+=this.templates.toggleSelectOption(this.settings.toggleFields[t]);this.$rule.find(".reasonsRuleToggleField select").html(i)},refresh:function(){this.settings.rules=[];var e=this.settings.toggleFields;if(0===e.length)return this.disable(),this.$message.text(Craft.t("No toggle fields available.")),!1;this.enable(),this.$message.text("");var t,i,s,n,a,o,r,l=this,d=this.$container.find(".reasonsStatement");d.each(function(){return t=[],i=$(this),s=i.find(".reasonsRule"),s.each(function(){if(n=$(this),a=n.find(".reasonsRuleToggleField select"),o=parseInt(a.val()),-1===l.settings.toggleFieldIds.indexOf(o))return void n.remove();r="";for(var i=0;i<l.settings.toggleFields.length;++i)r+=l.templates.toggleSelectOption(e[i],parseInt(e[i].id)===o);a.html(r),t.push({fieldId:o,compare:n.find(".reasonsRuleCompare select").val(),value:n.find(".reasonsRuleValue *:input:first").val()})}),0===t.length?void i.remove():void l.settings.rules.push(t)})},getConditionals:function(){return this.settings.rules&&this.settings.rules.length>0?this.settings.rules:!1},addStatement:function(e){e=$.extend({rules:!1},e);var t=this.$statement.clone(!0),i=e.rules;if(this.$builder.append(t),i)for(var s=0;s<i.length;++s)this.addRule($.extend({target:t},i[s]));else this.addRule({target:t});return t},addRule:function(e){e=$.extend({fieldId:null,compare:null,value:null},e);var t=this.$rule.clone(!0),i=e.target||this.$builder.find(".reasonsStatement:last"),s=e.fieldId,n=e.compare,a=e.value;return s&&t.find(".reasonsRuleToggleField select").val(s),i.length>0?(i.find(".reasonsRules:first").append(t),t.find(".reasonsRuleToggleField select").trigger("change"),n&&t.find(".reasonsRuleCompare select").val(n),a&&t.find(".reasonsRuleValue *:input:first").val(a),t):!1},onReasonsAddRuleClick:function(e){e.preventDefault();var t=$(e.currentTarget).parents(".reasonsStatement");this.addRule({target:t})},onReasonsRemoveRuleClick:function(e){e.preventDefault();var t=$(e.currentTarget),i=t.parents(".reasonsRule");i.remove(),this.refresh()},onReasonsAddStatementClick:function(e){e.preventDefault(),this.addStatement()},onReasonsRuleToggleFieldChange:function(e){e.preventDefault();var t=$(e.currentTarget),i=t.parents(".reasonsRule"),n=i.find(".reasonsRuleValue"),a=t.val(),o=s.getToggleFieldById(a),r=o.type,l=o.settings,d="";switch(r){case"Lightswitch":d=this.templates.select([{"true":Craft.t("on")},{"false":Craft.t("off")}]);break;case"Dropdown":case"MultiSelect":case"Checkboxes":case"RadioButtons":for(var u,c=l.options,h=[],f=0;f<c.length;++f)u={},u[c[f].value]=c[f].label,h.push(u);d=this.templates.select(h,"MultiSelect"===r||"Checkboxes"===r);break;case"Number":d=this.templates.number(l);break;case"PositionSelect":for(var u,c=l.options,h=[],f=0;f<c.length;++f)u={},u[c[f]]=c[f].charAt(0).toUpperCase()+c[f].slice(1),h.push(u);d=this.templates.select(h);break;default:d=this.templates.input(l)}n.html(d)},onReasonsRuleCompareChange:function(e){e.preventDefault()},onReasonsRuleValueChange:function(e){e.preventDefault()}},{defaults:{fieldId:null,toggleFields:null,rules:null,templates:{select:function(e,t){for(var i,s,n,a=[],o=0;o<e.length;++o)i=e[o],s=Object.keys(i)[0],n=i[s],a.push('<option value="'+s+'">'+n+"</option>");return'<div class="'+(t?"multiselect":"select")+'"><select'+(t?" multiple":"")+">"+a.join("")+"</select></div>"},toggleSelectOption:function(e,t){return'<option value="'+e.id+'" data-type="'+e.type+'"'+(t?" selected":"")+">"+e.name+"</option>"},number:function(e){return'<div class="input"><input class="text" type="number" value="0" min="'+e.min+'" max="'+e.max+'" autocomplete="off"></div>'},input:function n(e){var n="";return e=$.extend({initialRows:4,placeholder:"",multiline:!1},e),n+="1"===e.multiline?'<textarea rows="'+e.initialRows+'" placeholder="'+e.placeholder+'" autocomplete="off"></textarea>':'<input class="text" type="text" size="20" value="" placeholder="'+e.placeholder+'" autocomplete="off">','<div class="input">'+n+"</div>"},builderUi:function(){return'<div class="reasonsBuilderUi"><div class="wrapper"><div class="heading"><span>'+Craft.t("Show this field if")+'</span></div><div class="reasonsBuilder"><div class="reasonsStatement"><span class="delimiter">'+Craft.t("or")+'</span><div class="reasonsRules"><div class="reasonsRule"><div class="reasonsRuleParams"><div class="select reasonsRuleToggleField"><select /></div><div class="select reasonsRuleCompare"><select><option value="==">'+Craft.t("is equal to")+'</option><option value="!=">'+Craft.t("is not equal to")+'</option></select></div><div class="reasonsRuleValue" /></div><div class="reasonsRuleAmend"><a class="delete icon reasonsRemoveRule" title="'+Craft.t("Remove rule")+'"></a><a class="add icon reasonsAddRule" title="'+Craft.t("and")+'"></a></div><span class="reasonsRuleLead">'+Craft.t("and")+'</span></div></div></div></div><div class="reasonsAdd"><a class="btn reasonsAddStatement">'+Craft.t("Add rules")+'</a></div></div><div class="reasonsMessage"></div></div>'}}},instances:[]})}]);