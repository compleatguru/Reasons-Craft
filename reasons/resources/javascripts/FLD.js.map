{"version":3,"sources":["webpack:///webpack/bootstrap fc8e56b2c2eeeb4891d4","webpack:///./reasons.js","webpack:///./fld.js","webpack:///./modules/builder.js"],"names":[],"mappings":"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","file":"FLD.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"javascripts/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fc8e56b2c2eeeb4891d4\n **/","var Reasons = exports;\n\n$(function(){\n    Reasons.data = window._ReasonsData || false;\n});\n\nReasons.getToggleFields = function () {\n    return Reasons.data.toggleFields || [];\n};\n\nReasons.getToggleFieldById = function(fieldId)\n{\n    fieldId = parseInt(fieldId);\n    var toggleFields = Reasons.getToggleFields(),\n        numToggleFields = toggleFields.length;\n    for (var i = 0; i < numToggleFields; ++i) {\n        if (parseInt(toggleFields[i].id) === fieldId){\n            return toggleFields[i];\n        }\n    }\n    return false;\n};\n\nReasons.getConditionalsDataByEntryTypeId = function(entryTypeId)\n{\n    var conditionals;\n    for (var i = 0; i < Reasons.data.conditionals.length; ++i){\n        conditionals = Reasons.data.conditionals[i];\n        if (conditionals.typeId == entryTypeId){\n            return conditionals;\n        }\n    }\n    return false;\n};\n\nReasons.getEntryTypeIdsBySectionId = function(sectionId)\n{\n    return Reasons.data.entryTypeIds && Reasons.data.entryTypeIds.hasOwnProperty(sectionId) ? Reasons.data.entryTypeIds[sectionId] : false;\n};\n\nReasons.getFieldIdByHandle = function(fieldHandle)\n{\n    return Reasons.data.fieldIds && Reasons.data.fieldIds.hasOwnProperty(fieldHandle) ? Reasons.data.fieldIds[fieldHandle] : false;\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./reasons.js\n **/","var Reasons = require('./reasons');\n\nReasons.Builder = require('./modules/builder');\n\nReasons.FLD = {\n\n    settings : {\n        fieldLayoutFormSelector : '#fieldlayoutform',\n        formSelector : 'form:first',\n        fieldSettingsSelector : 'a.settings',\n        fieldSelector : '.fld-field',\n        tabSelector : '.fld-tabs .fld-tab'\n    },\n\n    init : function ()\n    {\n\n        // Get DOM elements\n        this.$container = $(this.settings.fieldLayoutFormSelector);\n        if (this.$container.length === 0) return false;\n        this.$form = this.$container.parents(this.settings.formSelector);\n        if (this.$form.length === 0) return false;\n\n        // Get database ID and initial conditionals\n        var entryTypeId = parseInt(Craft.path.substring(Craft.path.indexOf('entrytypes/')).split('/')[1]) || 'new',\n            conditionalsData = Reasons.getConditionalsDataByEntryTypeId(entryTypeId);\n        if (conditionalsData)\n        {\n            this.id = conditionalsData.id;\n            this.conditionals = conditionalsData.conditionals;\n        }\n\n        // Get available toggle field IDs\n        var self = this;\n        this.toggleFieldIds = [];\n        $.map(Reasons.getToggleFields(), function(toggleField){\n            self.toggleFieldIds.push(parseInt(toggleField.id));\n        });\n\n        // This hidden input will store our serialized conditionals\n        this.$conditionalsInput = $(this.templates.input({\n            name : '_reasons',\n            type : 'hidden'\n        }));\n\n        // This hidden input stores the conditional's ID\n        this.$conditionalsIdInput = $(this.templates.input({\n            name : '_reasonsId',\n            value : this.id || '',\n            type : 'hidden'\n        }));\n\n        // Append the hidden input fields\n        this.$form\n            .append(this.$conditionalsInput)\n            .append(this.$conditionalsIdInput)\n            // Attach submit event listener\n            .on('submit', $.proxy(this.onFormSubmit, this));\n\n        // Defer refresh\n        setTimeout($.proxy(this.refresh,this),0);\n\n        // Hack time. Make sure stuff is kept up to date when fields move around\n        this.$container.on('mousedown', this.settings.fieldSelector, $.proxy(this.onFieldMouseDown, this));\n\n    },\n\n    refresh : function()\n    {\n\n        var self = this,\n            conditionals = {},\n            $fields,\n            $field,\n            fieldId,\n            toggleFields;\n\n        // Loop over tabs\n        this.$container.find(this.settings.tabSelector).each(function(){\n\n            // Get all fields for this tab\n            $fields = $(this).find(self.settings.fieldSelector);\n\n            // Get all toggle fields for this tab\n            toggleFields = [];\n            $fields.each(function(){\n                $field = $(this);\n                fieldId = parseInt($field.data('id'));\n                if (self.toggleFieldIds.indexOf(fieldId) > -1){\n                    var toggleField = Reasons.getToggleFieldById(fieldId);\n                    if (toggleField){\n                        toggleFields.push(toggleField);\n                    }\n                }\n            });\n\n            // Loop over fields\n            $fields.each(function(){\n\n                $field = $(this);\n                fieldId = parseInt($field.data('id'));\n\n                if (!$field.data('_reasonsBuilder')){\n\n                    // Create builder\n                    $field.data('_reasonsBuilder',new Reasons.Builder({\n                        fieldId : fieldId,\n                        toggleFields : toggleFields,\n                        rules : self.conditionals && self.conditionals.hasOwnProperty(fieldId) ? self.conditionals[fieldId] : null\n                    }));\n\n                } else {\n\n                    // Refresh builder\n                    $field.data('_reasonsBuilder').update({\n                        toggleFields : toggleFields\n                    });\n\n                }\n\n                // Get rules\n                var rules = $field.data('_reasonsBuilder').getConditionals();\n                if (rules) {\n                    conditionals[fieldId] = rules;\n                    $field.addClass('reasonsHasConditionals');\n                } else {\n                    $field.removeClass('reasonsHasConditionals');\n                }\n\n                if (!$field.data('_reasonsSettingsMenuItemInitialized')){\n\n                    // Create settings menu item\n                    var $button = $field.find(self.settings.fieldSettingsSelector),\n                        menubtn = $button.data('menubtn') || false;\n\n                    if (!menubtn){\n                        return;\n                    }\n\n                    var $menu = menubtn.menu.$container;\n                    $menu\n                        .find('ul')\n                        .children(':first')\n                        .clone(true)\n                        .prependTo($menu.find('ul:first'))\n                        .find('a:first')\n                            .data('_reasonsField', $field)\n                            .attr('data-action', 'toggle-conditionals')\n                            .text(Craft.t('Manage conditionals'))\n                            .on('click', $.proxy(self.onFieldSettingsMenuItemClick, self));\n\n                    $field.data('_reasonsSettingsMenuItemInitialized',true);\n\n                }\n\n            });\n\n        });\n\n        if (Object.keys(conditionals).length === 0){\n            this.$conditionalsInput.attr('value','');\n        } else {\n            this.$conditionalsInput.attr('value',JSON.stringify(conditionals));\n        }\n\n    },\n\n    onFieldMouseDown : function ( e )\n    {\n\n        var self = this,\n            mouseUpHandler = function(e)\n            {\n                $('body').off('mouseup', mouseUpHandler);\n                self.refresh();\n            };\n\n        $('body').on('mouseup', mouseUpHandler);\n\n    },\n\n    onFieldSettingsMenuItemClick : function(e) {\n\n        e.preventDefault();\n        e.stopPropagation();\n\n        var $trigger = $(e.target),\n            $field = $trigger.data('_reasonsField');\n\n        if (!$trigger.data('_reasonsModal')) {\n\n            // Create modal\n            var self = this,\n                builder = $field.data('_reasonsBuilder'),\n                $modal = $(this.templates.modal()),\n                modal = new Garnish.Modal($modal, {\n                    resizable : true,\n                    autoShow : false,\n                    onShow : function()\n                    {\n                        self.refresh();\n                    },\n                    onHide : function()\n                    {\n                        self.refresh();\n                    }\n                });\n\n            // Add builder to modal\n            builder.get().appendTo($modal.find('.body'));\n\n            $modal.on('click', '.close', function (e) {\n                modal.hide();\n            } );\n\n            $trigger.data('_reasonsModal', modal);\n\n        }\n\n        $trigger.data('_reasonsModal').show();\n\n    },\n\n    onFormSubmit : function()\n    {\n        this.refresh();\n    },\n\n    templates : {\n        input : function(settings)\n        {\n            return '<input type=\"' + settings.type + '\" name=\"' + (settings.name || '') + '\" value=\"' + (settings.value || '') + '\" />';\n        },\n        modal : function()\n        {\n            return '<div class=\"modal elementselectormodal reasonsModal\"><div class=\"body\" /><div class=\"footer\"><div class=\"buttons rightalign first\"><div class=\"btn close submit\">Done</div></div></div></div>';\n        }\n    }\n\n};\n\n$(function(){\n    Reasons.FLD.init();\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./fld.js\n **/","var Reasons = require('../reasons');\n\nmodule.exports = Garnish.Base.extend({\n\n    $container : null,\n\n    init: function(settings)\n    {\n\n        this.setSettings(settings, Reasons.Builder.defaults);\n\n        this.templates = this.settings.templates;\n        this.fieldId = this.settings.fieldId;\n\n        this.$container = $(this.templates.builderUi());\n\n        this.$builder = this.$container.find('.reasonsBuilder:first');\n\n        // Create rule template\n        this.$rule = this.$container.find('.reasonsRule:first').clone(true);\n\n        // Create statement template\n        this.$statement = this.$container.find('.reasonsStatement:first').clone(true);\n        this.$statement.find('.reasonsRule').remove();\n\n        this.$message = this.$container.find('.reasonsMessage:first');\n\n        // Add some event listeners\n        this.$container\n            .on('click', '.reasonsAddRule', $.proxy(this.onReasonsAddRuleClick, this))\n            .on('click', '.reasonsRemoveRule', $.proxy(this.onReasonsRemoveRuleClick, this))\n            .on('click', '.reasonsAddStatement', $.proxy(this.onReasonsAddStatementClick, this))\n            .on('change', '.reasonsRuleToggleField select', $.proxy(this.onReasonsRuleToggleFieldChange, this))\n            .on('change', '.reasonsRuleCompare select', $.proxy(this.onReasonsRuleCompareChange, this))\n            .on('change', '.reasonsRuleValue *:input', $.proxy(this.onReasonsRuleValueChange, this));\n\n        // Clean out the builder\n        this.$builder.html('');\n\n        // Update toggle fields\n        this.setToggleFields(this.settings.toggleFields);\n\n        // Render existing rules\n        if (this.settings.rules && this.settings.rules.length > 0) {\n            for (var i = 0; i < this.settings.rules.length; ++i) {\n                this.addStatement({\n                    rules : this.settings.rules[i]\n                });\n            }\n        }\n\n        this.refresh();\n\n        Reasons.Builder.instances.push(this);\n\n    },\n\n    get : function()\n    {\n        return this.$container;\n    },\n\n    disable : function()\n    {\n        this.$container.addClass('disabled');\n    },\n\n    enable : function()\n    {\n        this.$container.removeClass('disabled');\n    },\n\n    update : function(settings)\n    {\n\n        // Set new settings\n        this.setSettings(settings, this.settings);\n\n        // Set new toggle fields\n        this.setToggleFields(this.settings.toggleFields);\n\n        // Refresh\n        this.refresh();\n\n    },\n\n    setToggleFields : function (toggleFields)\n    {\n\n        this.settings.toggleFields = [];\n        this.settings.toggleFieldIds = [];\n\n        for(var i = 0; i < toggleFields.length; ++i){\n            if (parseInt(toggleFields[i].id) !== this.fieldId){\n                this.settings.toggleFields.push(toggleFields[i]);\n                this.settings.toggleFieldIds.push(parseInt(toggleFields[i].id));\n            }\n        }\n\n        // Update rule template\n        var toggleFieldSelectOptions = '';\n        for (var i = 0; i < this.settings.toggleFields.length; ++i){\n            toggleFieldSelectOptions += this.templates.toggleSelectOption(this.settings.toggleFields[i]);\n        }\n        this.$rule.find('.reasonsRuleToggleField select').html(toggleFieldSelectOptions);\n\n    },\n\n    refresh : function ()\n    {\n\n        this.settings.rules = [];\n\n        var toggleFields = this.settings.toggleFields;\n\n        // If no toggle fields, GTFO\n        if (toggleFields.length === 0){\n            this.disable();\n            this.$message.text(Craft.t('No toggle fields available.'));\n            return false;\n        } else {\n            this.enable();\n            this.$message.text('');\n        }\n\n        var self = this,\n            statement,\n            $statements = this.$container.find('.reasonsStatement'),\n            $statement,\n            $rules,\n            $rule,\n            $toggleSelect,\n            toggleSelectValue,\n            toggleSelectOpts,\n            toggleFieldId;\n\n        $statements.each(function () {\n\n            statement = [];\n            $statement = $(this);\n            $rules = $statement.find('.reasonsRule');\n\n            $rules.each(function () {\n\n                $rule = $(this);\n\n                $toggleSelect = $rule.find('.reasonsRuleToggleField select');\n                toggleSelectValue = parseInt($toggleSelect.val());\n\n                // Remove rules where the selected toggle field no longer exists\n                if(self.settings.toggleFieldIds.indexOf(toggleSelectValue) === -1){\n                    $rule.remove();\n                    return;\n                }\n\n                // Re-render toggle select\n                toggleSelectOpts = '';\n                for (var i = 0; i < self.settings.toggleFields.length; ++i){\n                    toggleSelectOpts += self.templates.toggleSelectOption(toggleFields[i], parseInt(toggleFields[i].id) === toggleSelectValue);\n                }\n                $toggleSelect.html(toggleSelectOpts);\n\n                // Create the rule\n                statement.push({\n                    fieldId : toggleSelectValue,\n                    compare : $rule.find('.reasonsRuleCompare select').val(),\n                    value : $rule.find('.reasonsRuleValue *:input:first').val()\n                });\n\n            });\n\n            // Remove empty statements\n            if (statement.length === 0) {\n                $statement.remove();\n                return;\n            }\n\n            self.settings.rules.push(statement);\n\n        });\n\n    },\n\n    getConditionals : function ()\n    {\n        return this.settings.rules && this.settings.rules.length > 0 ? this.settings.rules : false;\n    },\n\n    addStatement : function(settings)\n    {\n\n        settings = $.extend({\n            rules : false\n        },settings);\n\n        var $statement = this.$statement.clone(true),\n            rules = settings.rules;\n\n        // Append the statement\n        this.$builder.append($statement);\n\n        if (!rules) {\n\n            // This is a new statement. Just add a default rule\n            this.addRule({\n                target : $statement\n            });\n\n        } else {\n\n            for (var i = 0; i < rules.length; ++i){\n                this.addRule($.extend({\n                    target : $statement\n                },rules[i]));\n            }\n\n        }\n\n        return $statement;\n    },\n\n    addRule : function(settings)\n    {\n\n        settings = $.extend({\n            fieldId : null,\n            compare : null,\n            value : null\n        },settings);\n\n        var $rule = this.$rule.clone(true),\n            $target = settings.target || this.$builder.find('.reasonsStatement:last'),\n            fieldId = settings.fieldId,\n            compare = settings.compare,\n            value = settings.value,\n            toggleField;\n\n        // Build the rule\n        if (fieldId) {\n            $rule.find('.reasonsRuleToggleField select').val(fieldId);\n        }\n\n        // Validate selected value TODO: Buggy/incomplete\n        // if(fieldId !== null){\n        //     toggleField = Reasons.getToggleFieldById(fieldId);\n        //     if (!toggleField){\n        //         return false;\n        //     }\n        //     if(value !== null && toggleField.settings.options){\n        //         var possibleValues = [];\n        //         for (var i = 0; i < toggleField.settings.options.length; ++i){\n        //             possibleValues.push(toggleField.settings.options[i].value);\n        //         }\n        //         console.log('*****',possibleValues);\n        //         if(possibleValues.indexOf(value) === -1){\n        //             return false;\n        //         }\n        //     }\n        // }\n\n        // Append the rule\n        if ($target.length > 0) {\n            $target.find('.reasonsRules:first').append($rule);\n        } else {\n            return false;\n        }\n\n        $rule\n            .find('.reasonsRuleToggleField select')\n            .trigger('change');\n\n        if (compare) {\n            $rule.find('.reasonsRuleCompare select').val(compare);\n        }\n\n        if (value) {\n            $rule.find('.reasonsRuleValue *:input:first').val(value);\n        }\n\n        return $rule;\n\n    },\n\n    onReasonsAddRuleClick : function (e)\n    {\n        e.preventDefault();\n        var $target = $(e.currentTarget).parents('.reasonsStatement');\n        this.addRule({\n            target : $target\n        });\n    },\n\n    onReasonsRemoveRuleClick : function (e)\n    {\n        e.preventDefault();\n        var $target = $(e.currentTarget),\n            $rule = $target.parents('.reasonsRule');\n        $rule.remove();\n        this.refresh();\n    },\n\n    onReasonsAddStatementClick : function (e) {\n        e.preventDefault();\n        this.addStatement();\n    },\n\n    onReasonsRuleToggleFieldChange : function (e) {\n\n        e.preventDefault();\n\n        // Render toggle value\n        var $target = $(e.currentTarget),\n            $rule = $target.parents('.reasonsRule'),\n            $ruleValue = $rule.find('.reasonsRuleValue'),\n            toggleFieldId = $target.val(),\n            toggleField = Reasons.getToggleFieldById(toggleFieldId),\n            toggleFieldType = toggleField.type,\n            toggleFieldSettings = toggleField.settings,\n            ruleValueContent = '';\n\n        switch (toggleFieldType) {\n\n            // Lightswitch - true/false\n            case 'Lightswitch' :\n                ruleValueContent = this.templates.select([\n                    { true : Craft.t('on') },\n                    { false : Craft.t('off') }\n                ]);\n                break;\n\n            // Option based inputs\n            case 'Dropdown' : case 'MultiSelect' : case 'Checkboxes' : case 'RadioButtons' :\n                var values = toggleFieldSettings.options,\n                    options = [],\n                    option;\n                for (var i = 0; i < values.length; ++i){\n                    option = {};\n                    option[values[i].value] = values[i].label;\n                    options.push(option);\n                }\n                ruleValueContent = this.templates.select(options, (toggleFieldType === 'MultiSelect' || toggleFieldType === 'Checkboxes'));\n                break;\n\n            // Number input\n            case 'Number' :\n                ruleValueContent = this.templates.number(toggleFieldSettings);\n                break;\n\n            // // Color input\n            // case 'Color' :\n            //     toggleFieldSettings = {\n            //         placeholder : '#'\n            //     };\n            //     ruleValueContent = this.templates.input(toggleFieldSettings);\n            //     break;\n\n            // Position Select\n            case 'PositionSelect' :\n                var values = toggleFieldSettings.options,\n                    options = [],\n                    option;\n                for (var i = 0; i < values.length; ++i) {\n                    option = {};\n                    option[values[ i ]] = values[ i ].charAt(0).toUpperCase() + values[ i ].slice(1);\n                    options.push(option);\n                }\n                ruleValueContent = this.templates.select(options);\n                break;\n\n            // Just render a plain text input for anything else\n            default :\n                ruleValueContent = this.templates.input(toggleFieldSettings);\n        }\n\n        $ruleValue.html(ruleValueContent);\n\n    },\n\n    onReasonsRuleCompareChange : function (e)\n    {\n        e.preventDefault();\n    },\n\n    onReasonsRuleValueChange : function (e)\n    {\n        e.preventDefault();\n    }\n\n},\n{\n    defaults: {\n        fieldId : null,\n        toggleFields : null,\n        rules : null,\n        templates : {\n            select : function(options,isMultiSelect)\n            {\n                var selectOptions = [],\n                    option,\n                    value,\n                    label;\n                for (var i = 0; i < options.length; ++i) {\n                    option = options[i];\n                    value = Object.keys(option)[0];\n                    label = option[value];\n                    selectOptions.push('<option value=\"' + value + '\">' + label + '</option>');\n                }\n                return '<div class=\"' + (isMultiSelect ? 'multiselect' : 'select') + '\"><select' + (isMultiSelect ? ' multiple' : '') + '>' + selectOptions.join('') + '</select></div>';\n            },\n            toggleSelectOption : function(toggleField, selected)\n            {\n                return '<option value=\"' + toggleField.id + '\" data-type=\"' + toggleField.type + '\"' + (selected ? ' selected' : '') + '>' + toggleField.name + '</option>';\n            },\n            number : function(settings)\n            {\n                return '<div class=\"input\"><input class=\"text\" type=\"number\" value=\"0\" min=\"' + settings.min + '\" max=\"' + settings.max + '\" autocomplete=\"off\"></div>';\n            },\n            input : function(settings)\n            {\n                var input = '';\n                settings = $.extend({\n                    initialRows : 4,\n                    placeholder : '',\n                    multiline : false\n                },settings);\n                if (settings.multiline === '1'){\n                    input += '<textarea rows=\"' + settings.initialRows + '\" placeholder=\"' + settings.placeholder + '\" autocomplete=\"off\"></textarea>';\n                } else {\n                    input += '<input class=\"text\" type=\"text\" size=\"20\" value=\"\" placeholder=\"' + settings.placeholder + '\" autocomplete=\"off\">';\n                }\n                return '<div class=\"input\">' + input + '</div>';\n            },\n            builderUi : function()\n            {\n                return '<div class=\"reasonsBuilderUi\">' +\n                            '<div class=\"wrapper\">' +\n                                '<div class=\"heading\"><span>' + Craft.t('Show this field if') + '</span></div>' +\n                                '<div class=\"reasonsBuilder\">' +\n                                    '<div class=\"reasonsStatement\">' +\n                                        '<span class=\"delimiter\">' + Craft.t('or') + '</span>' +\n                                        '<div class=\"reasonsRules\">' +\n                                            '<div class=\"reasonsRule\">' +\n                                                '<div class=\"reasonsRuleParams\">' +\n                                                    '<div class=\"select reasonsRuleToggleField\"><select /></div>' +\n                                                    '<div class=\"select reasonsRuleCompare\">' +\n                                                        '<select>' +\n                                                            '<option value=\"==\">' + Craft.t('is equal to') + '</option>' +\n                                                            '<option value=\"!=\">' + Craft.t('is not equal to') + '</option>' +\n                                                        '</select>' +\n                                                    '</div>' +\n                                                    '<div class=\"reasonsRuleValue\" />' +\n                                                '</div>' +\n                                                '<div class=\"reasonsRuleAmend\">' +\n                                                    '<a class=\"delete icon reasonsRemoveRule\" title=\"' + Craft.t('Remove rule') + '\"></a>' +\n                                                    '<a class=\"add icon reasonsAddRule\" title=\"' + Craft.t('and') + '\"></a>' +\n                                                '</div>' +\n                                                '<span class=\"reasonsRuleLead\">' + Craft.t('and') + '</span>' +\n                                            '</div>' +\n                                        '</div>' +\n                                    '</div>' +\n                                '</div>' +\n                                '<div class=\"reasonsAdd\">' +\n                                    '<a class=\"btn reasonsAddStatement\">' + Craft.t('Add rules') + '</a>' +\n                                '</div>' +\n                            '</div>' +\n                            '<div class=\"reasonsMessage\"></div>' +\n                        '</div>';\n            }\n        }\n    },\n    instances: []\n});\n\n\n\n/** WEBPACK FOOTER **\n ** ./modules/builder.js\n **/"],"sourceRoot":""}